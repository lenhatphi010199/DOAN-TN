"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AbilityCollection = function () {
  function AbilityCollection(definition, roles) {
    _classCallCheck(this, AbilityCollection);

    this.abilities = {};
    this.roles = roles;
    this.roleHash = {};
    this.definition = definition;
    this.hashCurrentRoles();
    this.collect();
  }

  AbilityCollection.prototype.hashCurrentRoles = function hashCurrentRoles() {
    for (var i = 0; i < this.roles.length; i++) {
      this.roleHash[this.roles[i]] = true;
    }
  };

  AbilityCollection.prototype.appendAbility = function appendAbility(permission) {
    this.abilities[permission] = true;
  };

  AbilityCollection.prototype.collect = function collect() {
    for (var i = 0; i < this.definition.permissions.length; i++) {
      var permission = this.definition.permissions[i];
      var roles = permission.roles;
      for (var k = 0; k < roles.length; k++) {
        if (this.roleHash[roles[k]]) {
          this.appendAbility(permission.name);
          break;
        }
      }
    }
  };

  return AbilityCollection;
}();

exports.default = AbilityCollection;